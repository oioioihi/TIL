1. 자바 함수

- 단순한 프로그래밍 언어에서 '함수'는 '메서드'와 동일한 의미로 쓰일 수 있으며, 특히 static method에 대해서 같은 의미로 사용된다.
- 그러나, 자바에서 함수는 '수학적인 함수'로, 부작용을 일으키지 않는 함수를 말할 수 있다.

그 외에 함수는 '독립적으로 존재하며, 하나의 기능을 구현하다록 구성한 것'이며, 메서드는 '클래스 내부에 정의되어,
객체의 속성을 다루기 위한 행위'라고도 하는데 독립적인지, 종속적인지에 따른다고 볼 수 있다.

2. 일급 객체 (First-class)
보통 프로그래밍을 할 때, '일급 객체'라는 말을 들어본 적이 있을 것이다. 일급 객체는 다른 객체들에 대해
'일반적으로 적용 가능한 연산을 모두 지우너하는 객체'를 의미한다. 단순히 이 문장을 보면 무슨 소리인지 이해하기 어렵다.
여기서 말하는 '일반적으로 적용 가능한 연산'이라는게 무었일까?

1. 변수나 데이터에 값을 할당할 수 있어야 한다.
2. 객체의 인자로 넘길 수 있어야 한다.
3. 객체의 리턴값으로 리턴할 수 있어야 한다.

그럼, 각각의 요소들에 대해서 잘 생각해보자. 자바의 메서드는 왜 일급 객체라고 할 수 없을까?

public class Test{
    public static void main(String[] args) {
        // 메서드를 변수에 할당할 수 없다.
        Object value = sample;

    }

    public static void sample(){
        System.out.println("I'm Sample!");
    }
}

자바에서 메서드 그 자체를 변수에 할당하는 것을 본 적 없을 것이다. 메서드의 리턴 값이 아닌,
메서드의 그 자체를 할당하는 것은 불가능하기 때문이다.


public class Test{
    public static void main(String[] args){
        // 메서드 자체를 매개변수로 전달할 수 없다.
        hello((Object) sample);
    }

    public static String hello(Object method){
           ...
    }

    public static void sample(){
        System.out.println("I'm Sample!");
    }
}

public class Test{
    public static String hello(){
        return sample;
    }

    public static String sample(){
        return "Sample!";
    }
}

또한, 메서드 그 자체를 함수의 파라미터로 전달할 수 없으며, 메서드의 리턴 값으로 바로 반환할 수도 없다.

그래서 보통 자바의 메서드는 일급 객체라고 하지 않는다. (보통 '이급 객체, 이급 시민' 이라고 한다)
하지만, 자바의 람다식이나 익명 클래스를 활용하게 되면 변수나 매개변수에 할당할 수 있기 때문에
일급 객체의 요건을 충족할 수 있다. 본 책에서는 자바8에서 "함수"가 새로 추가되며, 이러한 일급 객체의 특성을
만족할 수 있도록 힘수 자체를 '값'으로 취급하여 만들어 준다.
